<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reservationDAO">
	<update id="updateOrderNum">
		UPDATE comments SET orderNum=orderNum+1 WHERE <![CDATA[orderNum>=#{orderNum}]]>
	</update>
	<select id="getOrderNum" resultType="_int">
		SELECT orderNum FROM comments WHERE groupNum=#{rsvNum} AND depth=0;
	</select>
	<select id="getCommListBs" resultType="comment">
		SELECT orderNum,content,groupNum rsvNum,rdate,grade eval,mname,c.mno mno,depth
		FROM comments c,evaluation e, member m
		<where>
			c.groupNum=e.rno AND m.mno=c.mno
			AND c.bno=#{bno}
			<if test="searchOption==1"><!-- 이름검색 -->
				AND mname LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="searchOption==2"><!-- 주문번호검색 -->
				AND groupNum LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="searchOption==3"><!-- 평점검색 -->
				AND grade=#{search}
			</if>
		</where>
		<if test="order==1"> <!-- 등록 순이면 -->
			ORDER BY orderNum DESC
		</if>
		<if test="order==2"> <!-- 평점 순이면 -->
			ORDER BY grade <if test="orderType==2">DESC</if>, orderNum DESC
		</if>
		LIMIT #{rowStartNum},#{POSTS_PER_PAGE};
	</select>
	<select id="searchComm" resultType="comment"> <!-- 답글이 없는 리뷰 조회 임시 기록 -->
		SELECT * FROM comments a WHERE groupNum NOT IN (SELECT groupNum FROM comments b WHERE depth=1);
	</select>
	<update id="deleteCommCh">
		UPDATE comments SET mno=#{mno}, content=#{content} WHERE groupNum=#{rsvNum} AND depth=#{depth};
	</update>
	<delete id="deleteCommAb">
		DELETE FROM comments WHERE depth=#{depth} AND mno=#{mno} AND groupNum=#{rsvNum};
	</delete>
	<update id="updateComm">
		UPDATE comments SET content=#{content},mno=#{mno} WHERE groupNum=#{rsvNum} AND depth=#{depth};
	</update>
	<insert id="regitComm">
		<if test="depth==0">
			INSERT INTO comments (mno,bno,content,depth,groupNum,rdate,orderNum) 
			SELECT #{mno},#{bno},#{content},#{depth},#{rsvNum},NOW(),IFNULL(MAX(orderNum)+1,1) FROM comments;
			INSERT INTO evaluation VALUES (#{mno},#{bno},#{eval},);
		</if>
		<if test="depth==1">
			INSERT INTO comments (mno,bno,content,depth,groupNum,rdate,orderNum)
			VALUES (,#{bno},#{content},#{depth},#{rsvNum},NOW(),#{orderNum});
		</if>
	</insert>
	<insert id="likeOn">
		INSERT INTO liked VALUES ((SELECT bno FROM reservation WHERE rno=#{rsvNum}),(SELECT mno FROM reservation WHERE rno=#{rsvNum}));	
	</insert>
	<delete id="likeOff">
		DELETE FROM liked WHERE bno=(SELECT bno FROM reservation WHERE rno=#{rsvNum}) AND mno=(SELECT mno FROM reservation WHERE rno=#{rsvNum});
	</delete>
	<select id="checkLiked" resultType="_int">
		SELECT COUNT(l.bno) FROM liked l,(SELECT mno,bno FROM reservation WHERE rno=#{rsvNum}) r WHERE l.mno=r.mno AND l.bno=r.bno;
	</select>
	<update id="cancel">
		<if test="laundry!=null"> <!-- 품목 삭제일경우 -->
			UPDATE rsv_laundry SET stno=4 WHERE rno=#{rsvNum}
			AND lno=(SELECT lno FROM laundry_type WHERE lname=#{laundry});
		</if>
		<if test="laundry==null"> <!-- 예약번호 단위 삭제일 경우 -->
			UPDATE reservation SET stno=4 WHERE rno=#{rsvNum};
			UPDATE rsv_laundry SET stno=4 WHERE rno=#{rsvNum};
		</if>
	</update>
	<update id="complete">
		<if test="laundry!=null"> <!-- 품목 삭제일경우 -->
			UPDATE rsv_laundry SET stno=3 WHERE rno=#{rsvNum}
			AND lno=(SELECT lno FROM laundry_type WHERE lname=#{laundry});
		</if>
		<if test="laundry==null"> <!-- 예약번호 단위 삭제일 경우 -->
			UPDATE reservation SET stno=3 WHERE rno=#{rsvNum};
			UPDATE rsv_laundry SET stno=3 WHERE rno=#{rsvNum};
		</if>
	</update>
	<select id="getRsvListPs" resultType="reservation"> <!-- 일반회원 예약리스트 출력 -->	
		SELECT r.rno rsvNum,r.bno bno,rdate rsvDate,bname,phone,
		<if test="state==1">
		<![CDATA[	TIMESTAMPDIFF(HOUR,rdate,NOW())<1 timeOut]]>
		</if>
		<if test="state==3">
		<![CDATA[	TIMESTAMPDIFF(DAY,ddate,NOW())<7 timeOut]]>
		</if>
		, stname state
		FROM reservation r, business b, state s
		WHERE r.bno=b.bno AND r.stno=s.stno
		AND r.mno=#{mno}
		AND r.stno=#{state}
		ORDER BY rno DESC
		LIMIT #{rowStartNum},#{POSTS_PER_PAGE};
	</select>
	
	<select id="getRsvListBs_ld" resultType="laundry"> <!-- 업체 품목별 리스트 출력 -->
		SELECT rdate rsvDate, r.rno rsvNum, mname, lname laundry,cnt count,DATEDIFF(ddate,NOW()) dDay 
		FROM reservation r, member m, rsv_laundry r_l, laundry_type lt 
		<where>
			r.mno=m.mno AND r.rno=r_l.rno AND r_l.lno=lt.lno
			AND bno=#{bno} AND r_l.stno=1
			<if test="laundryType!=0">
				AND r_l.lno=#{laundryType}
			</if>
			<if test="searchOption==1"> <!-- 검색옵션-이름 입력시 -->
					AND mname LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="searchOption==2"> <!-- 검색옵션-주문번호 입력시 -->
					AND r.rno LIKE CONCAT('%',#{search},'%')
			</if>
		</where>
		<if test="order==1">
			ORDER BY r.rno DESC
		</if>
		<if test="order==2">
			ORDER BY dDay, r.rno DESC
		</if>
		LIMIT #{rowStartNum},#{POSTS_PER_PAGE};
	</select>
	<select id="getRsvListBs_rn" resultType="reservation"> 
		<if test="listType==3"><!-- 업체회원 주문번호별 리스트 출력 -->
			SELECT r.rno rsvNum,rdate rsvdate,mname,DATEDIFF(ddate,NOW()) dDay 
			FROM member m,reservation r
			WHERE r.mno=m.mno AND bno=#{bno} AND stno=1
			<if test="searchOption==1"> <!-- 검색옵션-이름 입력시 -->
					AND mname LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="searchOption==2"> <!-- 검색옵션-주문번호 입력시 -->
					AND r.rno LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="order==1">
				ORDER BY r.rno DESC
			</if>
			<if test="order==2">
				ORDER BY dDay, r.rno DESC
			</if>
				LIMIT #{rowStartNum},#{POSTS_PER_PAGE};
		</if>
		<if test="listType==4"> <!-- 업체회원 완료목록 출력 -->
			SELECT r.rno rsvNum,rdate rsvdate,mname,dDate,stname state FROM member m,reservation r,state s 
			<where> 
			r.mno=m.mno AND s.stno=r.stno AND bno=#{bno} 
				<if test="searchOption==1"> <!-- 검색옵션-이름 입력시 -->
					AND mname LIKE CONCAT('%',#{search},'%')
				</if>
				<if test="searchOption==2"> <!-- 검색옵션-주문번호 입력시 -->
					AND r.rno LIKE CONCAT('%',#{search},'%')
				</if>
			</where>
			AND (r.stno=2 OR r.stno=3)
			ORDER BY r.stno, r.rno DESC
			LIMIT #{rowStartNum},#{POSTS_PER_PAGE};
		</if>
	</select>
	<select id="getCommListPs" resultType="comment">
			SELECT mname,r.mno,bname,r.bno,content,c.rdate,depth
			FROM comments c, reservation r, member m,business b
			WHERE b.bno=r.bno AND m.mno=r.mno AND c.groupNum=r.rno
			AND groupNum=#{rsvNum}
			ORDER BY orderNum;
	</select>
	<select id="getLaundry" resultType="laundry"> <!-- 상태가 표시된 품목 리스트 출력 -->
			SELECT lname laundry, cnt count, cnt*price price,stname state 
			FROM reservation r, rsv_laundry r_l, business b, bsn_laundry b_l, laundry_type lt,state s
			WHERE r.rno=r_l.rno AND r.bno=b.bno AND b.bno=b_l.bno 
			AND lt.lno=r_l.lno AND b_l.lno=r_l.lno AND r_l.stno=s.stno
			AND r.rno=#{rsvNum};
	</select>
	<select id="countList" resultType="_int">
			SELECT count(r.rno) FROM
		<choose>
			<when test="listType==2"> <!-- 품목별 조회일 경우 -->
				rsv_laundry r_l, laundry_type lt, member m,reservation r
			</when>
			<otherwise> <!-- 일반 조회일 경우 -->
				reservation r, member m
			</otherwise>
		</choose>
		<where>
			<if test="listType==2"> <!-- 품목별 조회일 때 -->
				AND r_l.lno=lt.lno AND r.mno=m.mno AND r.rno=r_l.rno
			</if>
			<if test="listType!=2"> <!-- 일반 조회일 때 -->
				AND r.mno=m.mno
			</if>
			<if test='bno==0'> <!-- 일반회원의 주문조회 -->
				AND r.mno=#{mno}
			</if>
			<if test='bno!=0'> <!-- 업체회원의 주문조회 -->
				AND bno=#{bno}
			</if>
			<if test="searchOption==1"> <!-- 이름검색 -->
				AND mname LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="searchOption==2"> <!-- 주문번호검색 -->
				AND r.rno LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="laundryType!=0"> <!-- 품목 조회에서 '전체보기'가 아닐 경우-->
				AND r_l.lno=#{laundryType}
			</if>
			<if test="listType==4">
				AND (stno=2 OR stno=3) <!-- 완료목록일 시엔 OR 조건 추가 -->
			</if>
			<if test="listType==2"> <!-- 품목별 목록 -->
				AND r_l.stno=1;
			</if>
			<if test="listType==1 or listType==3"> <!-- 일반목록 -->
				AND r.stno=1
			</if>
		</where>
	</select>
</mapper>