<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserDAO">

	<insert id="insertPs" parameterType="person">
		INSERT INTO account
		(id,password) VALUES
		(#{id},#{password});
		INSERT INTO member VALUES
		((SELECT MAX(mno) FROM
		account),#{name},#{phone},#{birth},#{address},#{email});
	</insert>
	<delete id="likeOff">
		DELETE FROM liked WHERE mno=#{mno} AND bno=#{bno};
	</delete>
	<insert id="likeOn">
		INSERT INTO liked (bno,mno) VALUES(#{bno},#{mno});
	</insert>
	<insert id="insertBs" parameterType="business">
		INSERT INTO account (id,password) VALUES (#{id},#{password});
		INSERT
		INTO business (mno,bname,address,phone,bkno,acno,email,typeNum)
		VALUES
		((SELECT MAX(mno) FROM
		account),#{bname},#{address},#{phone},#{bankNum},#{bankAccountNum},#{email},#{bizType});

		<foreach collection="scheduleList" item="schedule"> <!-- 스케쥴 저장 -->
			INSERT INTO bsn_schedule VALUES ((SELECT MAX(bno) FROM
			business),${schedule.schno},'${schedule.time}');
		</foreach>

		<choose>
			<when test="bizType==1"> <!-- 일반세탁소라면 -->
				<foreach collection="laundryList" item="laundry">
					INSERT INTO
					bsn_laundry VALUES ((SELECT MAX(bno) FROM
					business),${laundry.lno},${laundry.price});
				</foreach>
			</when>
			<otherwise> <!-- else문,, 코인세탁소라면 -->
				<foreach collection="equipmentList" item="equipment">
					INSERT INTO
					bsn_equipment VALUES ((SELECT MAX(bno) FROM
					business),${equipment.eno},${equipment.cnt},${equipment.price});
				</foreach>
				<foreach collection="etcList" item="etc">
					INSERT INTO bsn_etc
					VALUES((SELECT MAX(bno) FROM business),${etc.etcno},${etc.price});
				</foreach>
			</otherwise>
		</choose>
	</insert>
	<update id="updatePs">
		<choose>
			<when test="email == null">
				UPDATE account SET password=#{password} WHERE
				mno=#{mno};
			</when>
			<otherwise>
				<!-- UPDATE account SET password=#{password} WHERE mno=#{mno}; -->
				UPDATE member SET
				phone=#{phone},birth=#{birth},address=#{address},email=#{email}
				WHERE mno=#{mno};
			</otherwise>
		</choose>
	</update>
    <select id="countLikeBs" resultType="_int">
        SELECT count(mno) FROM liked
        WHERE bno=#{bno};
    </select>
    <select id="avgGradeBs" resultType="_double">
	   SELECT round(AVG(grade),1)
	   FROM comments
	   WHERE bno=#{bno};
    </select>
	<update id="updateSpec">
		<choose>
			<when test="bizType==1"> <!-- 일반세탁소라면 -->
				<foreach collection="laundryList" item="laundry">
					UPDATE bsn_laundry
					SET price=#{laundry.price} WHERE bno=#{bno} AND lno=#{laundry.lno};
				</foreach>
				<foreach collection="scheduleList" item="schedule">
					UPDATE bsn_schedule
					SET time=#{schedule.time} WHERE bno=#{bno} AND
					schno=#{schedule.schno};
				</foreach>
			</when>
			<otherwise> <!-- else문,, 코인세탁소라면 -->
				<foreach collection="equipmentList" item="equipment">
					UPDATE
					bsn_equipment SET cnt=#{equipment.cnt}, price=#{equipment.price}
					WHERE bno=#{bno} AND eno=#{equipment.eno};
				</foreach>
				<foreach collection="etcList" item="etc">
					UPDATE bsn_etc SET
					price=#{etc.price} WHERE bno=#{bno} AND
					etcno=#{etc.etcno};
				</foreach>
				<foreach collection="scheduleList" item="schedule">
					UPDATE bsn_schedule
					SET time=#{schedule.time} WHERE bno=#{bno} AND
					schno=#{schedule.schno};
				</foreach>

			</otherwise>
		</choose>
	</update>

	<update id="updateBs">
		<choose>
			<when test="email == null">
				UPDATE account SET password=#{password} WHERE
				mno=#{mno};
			</when>
			<otherwise>
				<!-- UPDATE account SET password=#{password} WHERE mno=#{mno}; -->
				UPDATE business SET
				phone=#{phone},bkno=#{bankNum},acno=#{bankAccountNum},
				address=#{address},email=#{email}
				WHERE mno=#{mno};
			</otherwise>
		</choose>

	</update>
	<!-- 회원탈퇴 -->
	<delete id="deleteUser">
		DELETE ac, mb, res
		FROM account ac
		left outer join member mb on ac.mno=mb.mno
		left outer join reservation res on mb.mno=res.mno
		<if test="stno == 3 or stno == 4">
			AND id=#{id} AND password=#{password};
		</if>
	</delete>
	<!-- 로그인들 -->
	<select id="getPerson" resultType="account">
		SELECT ifnull(ac.mno,0) as mno, id,
		password, mname, email, mtype
		FROM account ac,
		member mb
		WHERE ac.mno=mb.mno
		AND id=#{id} AND password=#{password};
	</select>
	<select id="getPersonBs" resultType="account">
		SELECT ac.mno as mno,
		bs.bno, id, password, bname, email, mtype
		FROM account ac, business bs
		WHERE ac.mno=bs.mno
		AND id=#{id} AND
		password=#{password};
	</select>
	<select id="getPersonSNS" resultType="account">
		SELECT ac.mno as mno, id,
		password, mname, email
		FROM account ac, member mb
		WHERE ac.mno=mb.mno
		AND email=#{email};
	</select>

	<select id="getEmail" resultType="int">
	<!-- 	SELECT *
		FROM member
		WHERE
		email=#{email); -->

		SELECT count(*)
		FROM member m
		LEFT JOIN business b on m.mno = b.mno
		WHERE m.email=#{email} OR b.email=#{email};
	</select>
	<select id="getLikedBs" resultType="business"><!-- 찜한 업체 목록 조회 -->
		SELECT IFNULL(comm,0) count,l.bno,bname,IFNULL(ROUND(eval,1),0) eval,address,phone
		FROM business b ,liked l 
		LEFT OUTER JOIN (SELECT count(mno) comm,AVG(grade) eval, bno FROM comments WHERE depth=0 GROUP BY bno) c ON c.bno=l.bno
		WHERE l.bno=b.bno
		AND l.mno=#{mno}
		GROUP BY b.bno;
	</select>
	<!-- 관리자 페이지 기능이기 때문에 일단 대기.. -->
	<select id="getUserList">

	</select>
	<!-- 사양관리/설비관리 -->
	<select id="getLaundryList" resultType="laundry">
		SELECT bs.lno as lno,
		lname as laundry, price
		FROM bsn_laundry bs, laundry_type la, business
		b
		WHERE bs.lno=la.lno AND bs.bno=b.bno AND b.bno=#{bno};
	</select>
	<select id="getEquipmentList" resultType="equipment">
		SELECT eno, cnt, price
		FROM bsn_equipment WHERE bno= #{bno};
	</select>
	<select id="getEtc" resultType="etc">
		SELECT etcno, price FROM bsn_etc
		WHERE bno = #{bno};
	</select>
	<select id="getScheduleList" resultType="schedule">
		SELECT bs.schno, time
		FROM bsn_schedule bs, schedule sc
		WHERE bs.schno = sc.schno
		AND bno=#{bno};
	</select>
	<select id="findId" resultType="account">

		<!-- SELECT * FROM account ac LEFT JOIN member mb on ac.mno=mb.mno LEFT 
			JOIN business bs on ac.mno=bs.mno WHERE (mname='테스트업체' AND mb.email='test@naver.com') 
			OR (bname='테스트업체' AND bs.email='test@naver.com'); -->
		SELECT id
		FROM account ac
		LEFT JOIN member mb on ac.mno=mb.mno
		LEFT JOIN
		business bs on ac.mno=bs.mno
		WHERE (mname=#{name} AND
		mb.email=#{email})
		OR (bname=#{name} AND bs.email=#{email});
	</select>
	<select id="findPw" resultType="account">
		<!-- SELECT b.email bmail, m.email mmail, id -->
		SELECT b.email mmail, m.email bmail, id
		FROM account ac
		LEFT OUTER JOIN
		member m on ac.mno=m.mno
		LEFT OUTER JOIN business b on ac.mno=b.mno
		WHERE ac.id=#{id};
	</select>
	<select id="idchk" resultType="int">
		SELECT count(*)
		FROM account
		WHERE
		id=#{id} AND password=#{password};
	</select>
	<select id="joinCfm" resultType="account">
		SELECT id, mname, bname
		FROM
		account a
		LEFT JOIN member m on a.mno=m.mno
		LEFT JOIN business b on
		b.mno=a.mno
		WHERE id=#{id};
	</select>
</mapper>

